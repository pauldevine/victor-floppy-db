# Generated by Django 4.2.7 on 2023-12-03 20:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArchCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Mediatype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mediatype', models.CharField(choices=[('TX', 'Texts'), ('ET', 'Etree'), ('AU', 'Audio'), ('MV', 'Movies'), ('SW', 'Software'), ('IM', 'Image'), ('DA', 'Data'), ('WB', 'Web'), ('CO', 'Collection'), ('AC', 'Account')], default='SW', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='images')),
            ],
        ),
        migrations.CreateModel(
            name='RandoFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='randoFiles')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ZipArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archive', models.FileField(upload_to='archives')),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.SlugField(max_length=500)),
                ('fullArchivePath', models.URLField(blank=True, null=True)),
                ('folder', models.FileField(upload_to='diskMusteringArea')),
                ('title', models.CharField(max_length=500)),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('uploaded', models.BooleanField(default=False)),
                ('hasFluxFile', models.BooleanField(default=False)),
                ('hasFileContents', models.BooleanField(default=True)),
                ('needsWork', models.BooleanField(default=False)),
                ('readyToUpload', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('collections', models.ManyToManyField(to='floppies.archcollection')),
                ('contributors', models.ManyToManyField(to='floppies.contributor')),
                ('creators', models.ManyToManyField(to='floppies.creator')),
                ('languages', models.ManyToManyField(to='floppies.language')),
                ('photos', models.ManyToManyField(to='floppies.photoimage')),
                ('randoFiles', models.ManyToManyField(to='floppies.randofile')),
                ('subjects', models.ManyToManyField(to='floppies.subject')),
            ],
        ),
    ]
